% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utility.R
\name{catchCurvePrep}
\alias{catchCurvePrep}
\title{Convert length-frequency data into aggregate numbers by relative age and
(optionally) cohort}
\usage{
catchCurvePrep(lfq, method = "LCCC", agemax = NULL, n.cohort = NULL,
  n.cohort.per.yr = NULL, use.ndt = NULL)
}
\arguments{
\item{lfq}{an object of class lfq}

\item{method}{method of conversion (LCCC, GOTCHA, SLICC)}

\item{agemax}{integer. Maximum age plus group}

\item{n.cohort}{integer. Number of pseudocohort to derive from lfq.
Only used GOTCHA method (Defaults to number of length bins for
consistency with LCCC).}

\item{n.cohort.per.yr}{integer. Number of pseudocohorts per year.
Overrides `n.cohort`. Can be applied to GOTCHA and SLICC. Default}

\item{use.ndt}{}
}
\value{
list.
}
\description{
Convert length-frequency data into aggregate numbers by relative age and
(optionally) cohort
}
\examples{

data("synLFQ4")
lfq <- synLFQ4
lfq$par <- list(Linf = 80, K = 0.5, C = 0.75, ts = 0.5, ta = 0.25)
lfq <- lfqModify(lfq, year = 2006, bin_size = 2)
lfq <- lfqRestructure(lfq)
plot(lfq)

# LCCC
res <- catchCurvePrep(lfq = lfq, method = "LCCC")
plot(log(n) ~ rel.age, res$tab)
incl <- which(res$tab$rel.age > 1)
points(log(n) ~ rel.age, res$tab[incl,], pch = 20 )
fit <- lm(log(n) ~ rel.age, res$tab[incl,])
abline(fit)
-coef(fit)[2] # true: Z = 1.0

# GOTCHA (default settings)
res <- catchCurvePrep(lfq = lfq, method = "GOTCHA")
plot(log(n) ~ rel.age, res$tab)
incl <- which(res$tab$rel.age > 2 & res$tab$rel.age < 6)
points(log(n) ~ rel.age, res$tab[incl,], pch = 20 )
fit <- lm(log(n) ~ rel.age, res$tab[incl,])
abline(fit)
-coef(fit)[2] # true: Z = 1.0

# GOTCHA (1 cohort per year)
res <- catchCurvePrep(lfq = lfq, method = "GOTCHA", n.cohort.per.yr = 1)
plot(log(n) ~ rel.age, res$tab)
incl <- which(res$tab$rel.age > 1.5 & res$tab$rel.age < 6)
points(log(n) ~ rel.age, res$tab[incl,], pch = 20 )
fit <- lm(log(n) ~ rel.age, res$tab[incl,])
abline(fit)
-coef(fit)[2] # true: Z = 1.0

# SLICC
res <- catchCurvePrep(lfq = lfq, method = "SLICC")
plot(log(n) ~ rel.age, res$tab, col = res$tab$cohort)
incl <- which(res$tab$rel.age > 1 & res$tab$rel.age < 6)
points(log(n) ~ rel.age, res$tab[incl,], pch = 20,
  col = res$tab$cohort[incl])
fit0 <- lm(log(n) ~ rel.age + cohort, res$tab[incl,])
fit1 <- lm(log(n) ~ rel.age, res$tab[incl,])
fit <- get(c("fit0", "fit1")[which.min(AIC(fit0, fit1)$AIC)])
abline(fit)
-coef(fit)[2] # true: Z = 1.0



}
