% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mortality.R
\name{catchCurvePrep}
\alias{catchCurvePrep}
\title{Prepare length-frequency data for catch curve analysis}
\usage{
catchCurvePrep(
  lfq,
  method = "LCCC",
  agemax = NULL,
  n.cohort = NULL,
  n.cohort.per.yr = NULL,
  use.ndt = NULL
)
}
\arguments{
\item{lfq}{an object of class lfq}

\item{method}{method of conversion (LCCC, GOTCHA, SLICC)}

\item{agemax}{integer. Maximum age plus group}

\item{n.cohort}{integer. Number of pseudocohort to derive from lfq.
Only used GOTCHA method (Defaults to number of length bins for
consistency with LCCC).}

\item{n.cohort.per.yr}{integer. Number of pseudocohorts per year.
Overrides `n.cohort`. Can be applied to GOTCHA and SLICC. Default}

\item{use.ndt}{logical. Should numbers be divided by the time required to
grow through bin. This argument was used for method development and is
not expected to be defined by the user. For LCCC, this is set to TRUE,
and set to FALSE for other methods.}
}
\value{
list.
}
\description{
The function can apply various methods of converting
  length-frequency data into aggregate numbers by relative age and
  (optionally) cohort. The method LCCC (length converted catch curve)
  does not account for seasonal oscillations in growth when determining age.
  Each length bin corresponds to given age according to the VBGF,
  and numbers are aggregated across length bins.
  With the GOTCHA method (Pauly, 1990), lfq data is sliced along growth
  trajectories to identify 'pseudocohorts', whose numbers are aggregated.
  As demonstrated by Pauly (1990), the method can be applied to cases where
  seasonally-oscillating growth creates inconsistencies of age at length
  depending on the time of year. The GOTCHA method aggregates by
  pseudocohort, as opposed to by length class in LCCC, and therefore does
  not require the correction of dividing numbers by time spent in a given
  length bin (n/dt).
  SLICC (slice-based catch curve) is an adaptation of GOTCHA whereby yearly
  cohorts are assigned but no aggregations are done. With this approach, one
  has the ability to regress numbers (i.e. individual bin counts) against
  both relative age (rel.age) and a factor relating to cohort. In principle,
  this should allow for the calculation of a single total mortality value
  (Z), while allowing for variable intercepts for each cohort, as might be
  assumed under conditions of variable recruitment.
}
\examples{

data("synLFQ4")
lfq <- synLFQ4
lfq$par <- list(Linf = 80, K = 0.5, C = 0.75, ts = 0.5, ta = 0.25)
lfq <- lfqModify(lfq, year = 2006, bin_size = 2)
lfq <- lfqRestructure(lfq)
plot(lfq)

# LCCC
res <- catchCurvePrep(lfq = lfq, method = "LCCC")
plot(log(n) ~ rel.age, res$tab)
incl <- which(res$tab$rel.age > 1)
points(log(n) ~ rel.age, res$tab[incl,], pch = 20 )
fit <- lm(log(n) ~ rel.age, res$tab[incl,])
abline(fit)
-coef(fit)[2] # true: Z = 1.0

# GOTCHA (default settings)
res <- catchCurvePrep(lfq = lfq, method = "GOTCHA")
plot(log(n) ~ rel.age, res$tab)
incl <- which(res$tab$rel.age > 2 & res$tab$rel.age < 6)
points(log(n) ~ rel.age, res$tab[incl,], pch = 20 )
fit <- lm(log(n) ~ rel.age, res$tab[incl,])
abline(fit)
-coef(fit)[2] # true: Z = 1.0

# GOTCHA (1 cohort per year)
res <- catchCurvePrep(lfq = lfq, method = "GOTCHA", n.cohort.per.yr = 1)
plot(log(n) ~ rel.age, res$tab)
incl <- which(res$tab$rel.age > 1.5 & res$tab$rel.age < 6)
points(log(n) ~ rel.age, res$tab[incl,], pch = 20 )
fit <- lm(log(n) ~ rel.age, res$tab[incl,])
abline(fit)
-coef(fit)[2] # true: Z = 1.0

# SLICC
res <- catchCurvePrep(lfq = lfq, method = "SLICC")
plot(log(n) ~ rel.age, res$tab, col = res$tab$cohort)
incl <- which(res$tab$rel.age > 1 & res$tab$rel.age < 6)
points(log(n) ~ rel.age, res$tab[incl,], pch = 20,
  col = res$tab$cohort[incl])
fit0 <- lm(log(n) ~ rel.age + cohort, res$tab[incl,])
fit1 <- lm(log(n) ~ rel.age, res$tab[incl,])
fit <- get(c("fit0", "fit1")[which.min(AIC(fit0, fit1)$AIC)])
abline(fit)
-coef(fit)[2] # true: Z = 1.0




}
\references{
Pauly, D. (1990). Length-converted catch curves and the seasonal growth
  of fishes. Fishbyte, 8(3), 33â€“38.
}
